  @Input() form!: FormControl;
  @Input() field!: string;

  get control(): FormControl {
    return this.form.get(this.field) as FormControl;
  }

  get cssClass(): string {
    return this.control?.touched
      ? this.control.valid
        ? 'is-valid'
        : 'is-invalid'
      : '';
  }

  get errorMessage(): string {
    const { errors } = this.control;
    if (errors?.['required']) 'This field is required';
    else if (errors?.['email']) return 'This field must be a valid email';
    else if (errors?.['minlength'])
      return `This field must be longer than ${errors['minlength'].requiredLength} characters`;
    else if (errors?.['maxlength'])
      return `This field must be shorter than ${errors['maxlength'].requiredLength} characters`;
    else if (errors?.['min'])
      return `This field must be greater than ${errors['min'].min}`;
    else if (errors?.['max'])
      return `This field must be less than ${errors['max'].max}`;
    else if (errors?.['pattern'])
      return `This field must match the pattern ${errors['pattern'].requiredPattern}`;
    return '';
  }
